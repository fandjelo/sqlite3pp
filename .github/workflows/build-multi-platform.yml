# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build on multiple platforms

on:
  workflow_call:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix
      # combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            profile: windows-msvc
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            profile: linux-gcc
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            profile: linux-clang
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 2.0.16

    - name: Create Conan profile
      run: | 
        echo "Conan version ${{ steps.conan.outputs.version }}"
        conan profile detect --force

    - name: Build and Test project
      run: >
        conan create ${{ github.workspace }}
        --profile .github/conan-profiles/${{ matrix.profile }}
        --build=missing 
        -s build_type=${{ matrix.build_type }}
